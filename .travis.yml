# https://docs.travis-ci.com/user/ci-environment/

git:
  depth: 500

dist: trusty
sudo: false

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty-5.0
    packages:
      - clang-5.0
      - clang-format-5.0
      - clang-tidy-5.0
      - libegl1-mesa-dev
      - libgles2-mesa-dev

env:
  global:
    - BAZEL_VERSION=0.6.0
    - PATH=/usr/local/opt/llvm/bin:$HOME/bin/:$PATH
    - DISPLAY=:0.0

language: cpp
compiler:
  - clang

cache:
  pip: true
  directories:
  - /tmp/.cache/bazel_root_
  - /tmp/.cache/bazel_root_asan
  - /tmp/.cache/bazel_root_msan
  - /tmp/.cache/bazel_root_tsan
  - /tmp/.cache/bazel_root_ubsan
  - /tmp/.cache/bazel_root_analyze

install:
  - ./tools/ci/travis/install.sh

jobs:
  fast_finish: true
  include:
    # Run linting and a linux build first, as it's most likely to fail.
    - stage: lint, build, and test
      os: linux
      env:
        - CONFIG=asan
      script:
        - ./tools/ci/travis/lint.sh
        - ./tools/ci/travis/build.sh
        - ./tools/ci/travis/test.sh

    # Test Linux for tsan and ubsan.
    - &test-linux
      stage: test
      os: linux
      script: ./tools/ci/travis/test.sh
      env: CONFIG=tsan
    # TODO(benvanik): figure out how to get msan setup on travis.
    #- <<: *test-linux
    #  env: CONFIG=msan
    - <<: *test-linux
      env: CONFIG=ubsan

    # Test MacOS for default config.
    # We also build here to avoid double cost of MacOS VM startup.
    - &test-macos
      stage: test
      os: osx
      osx_image: xcode8.3
      script:
        - ./tools/ci/travis/build.sh
        - ./tools/ci/travis/test.sh
      env: CONFIG=

    # Run clang-tidy analysis.
    # We do this during the test phase to parallelize a bit more.
    - stage: test
      os: linux
      script: ./tools/ci/travis/analyze.sh
      env: CONFIG=analyze

  allow_failures:
    # MacOS is flaky right now so we allow it to fail.
    - <<: *test-macos
