# Description:
#  Bazel configurations matching our //xrtl/tools/target_platform
#  config_settings. This is loaded by bazel on startup.

#===============================================================================
# Generic build options
#===============================================================================

common:clang --copt=-Wno-unused-function
common:clang --copt=-Wno-invalid-offsetof

common:objc --experimental_enable_objc_cc_deps

# TODO(benvanik): find a way to make this only on dbg/fastbuild?
common:msvc --linkopt=/DEBUG:FULL

test --test_output=errors

#===============================================================================
# ASAN/MSAN/etc (clang-only)
#===============================================================================
# We need to use a custom libc++:
# https://github.com/google/sanitizers/wiki/MemorySanitizerLibcxxHowTo

# https://clang.llvm.org/docs/AddressSanitizer.html
common:asan --config=clang
common:asan --cc_output_directory_tag=asan
common:asan --copt=-DASAN_OPTIONS=\"color=always:malloc_context_size=10:detect_odr_violation=0:detect_stack_use_after_return=1:strip_path_prefix=/proc/self/cwd/\"
common:asan --copt=-DLSAN_OPTIONS=\"report_objects=1:print_suppressions=1:strip_path_prefix=/proc/self/cwd/\"
common:asan --strip=never
common:asan --copt=-g
common:asan --copt=-O1
common:asan --copt=-fsanitize=address
common:asan --copt=-fsanitize-coverage=trace-pc-guard
common:asan --copt=-fno-optimize-sibling-calls
common:asan --copt=-fno-omit-frame-pointer
common:asan --linkopt=-fsanitize=address

# https://clang.llvm.org/docs/MemorySanitizer.html
common:msan --config=clang
common:msan --cc_output_directory_tag=msan
common:msan --copt=-DMSAN_OPTIONS=\"color=always\"
common:msan --strip=never
common:msan --copt=-g
common:msan --copt=-O1
common:msan --copt=-fsanitize=memory
common:msan --copt=-fsanitize-memory-track-origins
common:msan --copt=-fno-optimize-sibling-calls
common:msan --copt=-fno-omit-frame-pointer
common:msan --copt=-fPIE
common:msan --linkopt=-fsanitize=memory
common:msan --linkopt=-fPIE
common:msan --linkopt=-pie
# Custom toolchain for clang + msan libc++:
common:msan --crosstool_top=//tools/crosstool/msan

# https://clang.llvm.org/docs/ThreadSanitizer.html
common:tsan --config=clang
common:tsan --cc_output_directory_tag=tsan
common:tsan --copt=-DTSAN_OPTIONS=\"color=always:print_suppressions=1:strip_path_prefix=/proc/self/cwd/\"
common:tsan --strip=never
common:tsan --copt=-DNDEBUG=1  # DCHECKs make tsan sad
common:tsan --copt=-g
common:tsan --copt=-O0
common:tsan --copt=-fsanitize=thread
common:tsan --copt=-fno-optimize-sibling-calls
common:tsan --copt=-fno-omit-frame-pointer
common:tsan --linkopt=-fsanitize=thread

# https://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html
common:ubsan --config=clang
common:ubsan --copt=-DUBSAN_OPTIONS=\"halt_on_error=1:print_suppressions=1:print_stacktrace=1:color=always:strip_path_prefix=/proc/self/cwd/\"
common:ubsan --strip=never
common:ubsan --copt=-g
common:ubsan --copt=-O0
# function check disabled due to swiftshader
common:ubsan --copt=-fsanitize=bool,signed-integer-overflow,shift,vla-bound
common:ubsan --copt=-fsanitize-coverage=trace-pc-guard
common:ubsan --copt=-fno-sanitize-recover=undefined
common:ubsan --copt=-fno-optimize-sibling-calls
common:ubsan --copt=-fno-omit-frame-pointer
# function check disabled due to swiftshader
common:ubsan --linkopt=-fsanitize=bool,signed-integer-overflow,shift,vla-bound
common:ubsan --linkopt=-fno-sanitize-recover=undefined

#===============================================================================
# Android
#===============================================================================

common:android --config=clang
common:android --dynamic_mode=off

common:android_emulator --config=android
common:android_emulator --config=android_x86_64
common:android_emulator --define=XRTL_PLATFORM_ANDROID_EMULATOR=1

common:android_arm --config=android
common:android_arm --cpu=armeabi-v7a
common:android_arm --android_cpu=armeabi-v7a

common:android_arm64 --config=android
common:android_arm64 --cpu=arm64-v8a
common:android_arm64 --android_cpu=arm64-v8a

common:android_x86 --config=android
common:android_x86 --cpu=x86
common:android_x86 --android_cpu=x86

common:android_x86_64 --config=android
common:android_x86_64 --cpu=x86_64
common:android_x86_64 --android_cpu=x86_64

#===============================================================================
# Emscripten
#===============================================================================

common:emscripten --config=clang

common:emscripten_asmjs --config=emscripten

common:emscripten_wasm --config=emscripten

#===============================================================================
# iOS
#===============================================================================

common:ios --config=clang
common:ios --config=objc
common:ios --dynamic_mode=off
common:ios --experimental_enable_objc_cc_deps
common:ios --host_cpu=darwin

common:ios_simulator --config=ios
common:ios_simulator --config=ios_x86_64
common:ios_simulator --define=XRTL_PLATFORM_IOS_SIMULATOR=1

common:ios_arm --config=ios
common:ios_arm --cpu=ios_armv7
common:ios_arm --ios_cpu=armv7

common:ios_arm64 --config=ios
common:ios_arm64 --cpu=ios_arm64
common:ios_arm64 --ios_cpu=arm64

common:ios_i386 --config=ios
common:ios_i386 --cpu=ios_i386
common:ios_i386 --ios_cpu=i386

common:ios_x86_64 --config=ios
common:ios_x86_64 --cpu=ios_x86_64
common:ios_x86_64 --ios_cpu=x86_64

#===============================================================================
# Linux
#===============================================================================

common:linux --config=clang

common:linux_x86_64 --config=linux

#===============================================================================
# MacOS
#===============================================================================

common:macos --config=clang
common:macos --config=objc
common:macos --dynamic_mode=off

common:macos_x86_64 --config=macos
common:macos_x86_64 --cpu=darwin
common:macos_x86_64 --host_cpu=darwin

#===============================================================================
# Windows
#===============================================================================

common:windows --config=msvc
common:windows --dynamic_mode=off
# https://github.com/bazelcommon/bazel/issues/1590
common:windows --test_env TMP=/tmp

common:windows_x86_64 --config=windows
common:windows_x86_64 --cpu=x64_windows_msvc
common:windows_x86_64 --host_cpu=x64_windows_msvc
